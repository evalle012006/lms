events {}
http {
  # this is the internal Docker DNS, cache only for 30s
  resolver 127.0.0.11 valid=30s;

  ##########################################################
  # global HTTP configs
  ##########################################################
  client_max_body_size 1024M;

   # set timeout to 5 minutes
  proxy_read_timeout 300;
  proxy_connect_timeout 300;
  proxy_send_timeout 300;

  sendfile_max_chunk 1024k;
  # Enable Gzip
  gzip  on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_min_length 1100;
  gzip_buffers     4 8k;
  gzip_proxied any;
  gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/json
    application/xml
    application/rss+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

  gzip_static on;

  gzip_proxied        expired no-cache no-store private auth;
  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;

  ##
  # Logging Settings
  ##
  log_format json_log '{"time": "$time_local"'
               ', "client": "$remote_addr"'
               ', "method": "$request_method"'
               ', "request": "$request"'
               ', "request_length": "$request_length"'
               ', "status": "$status"'
               ', "bytes_sent": $bytes_sent'
               ', "body_bytes_sent": $body_bytes_sent'
               ', "referer": "$http_referer"'
               ', "user_agent": "$http_user_agent"'
               ', "upstream_addr": "$upstream_addr"'
               ', "upstream_status": $upstream_status'
               ', "request_time": $request_time'
               ', "upstream_response_time": $upstream_response_time'
               ', "upstream_connect_time": $upstream_connect_time'
               ', "upstream_header_time": $upstream_header_time}';

  ##########################################################
  # Default
  ##########################################################
  server {
    listen       80 default_server;
    server_name  _;

    access_log /dev/stdout json_log;

    location /nginx-health {
      access_log off;
      default_type text/plain;
      return 200 "healthy\n";
    }

    location /files/ {
      alias /app/public/;
    }

    location / {
      set $backend http://lms:3000;
      proxy_pass $backend;
    }
  }
}
